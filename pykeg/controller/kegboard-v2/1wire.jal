-- original source: http://groups.yahoo.com/group/jallist/files/

-- DalSemi 1-Wire library for JAL
-- P. Pemberton. Licensed under the LGPL.
-- Uses a single I/O pin and a 4k7 pullup to communicate over the 1-Wire bus.
-- Tested with:
-- 1x DS1822 "Econo Digital Thermometer"
-- 2x DS1990A-F5 "Serial Number iButton"
-- 2x DS1973-F3 "EEPROM iButton"

-- Following bits should be defined in your program:
--
-- var volatile bit _1w_dq is pin_a2
-- var volatile bit _1w_dq_dir is pin_a2_direction

include jdelay

-- Generates a reset pulse on the 1-Wire bus
-- Return values:
--   0 - Presence pulse received
--   1 - No presence pulse received
--   2 - 1-Wire bus is short circuited
function _1w_reset return byte is
  var bit presence
  _1w_dq_dir = input                    -- Direction = input
  if ! _1w_dq then                      -- Short circuit?
    return 2                            -- Yes. Exit with errorcode 2
  end if
  _1w_dq_dir = output                   -- Reset pulse
  delay_500us()
  _1w_dq_dir = input                    -- Allow bus to float high
  assembler                             -- Allow for rise time
   nop
   nop
   nop
          nop
   nop
   nop
  end assembler
  presence = low                        -- Assume no presence pulse
  for 145 loop                          -- Loop 145 times
    if ! _1w_dq then                    -- Presence pulse?
      presence = high                   -- Yes - set the flag
    end if
  end loop
  if presence then                      -- Presence pulse detected?
    return 0                            -- Yes - return with errorcode 0
  else
    return 1                            -- No - return with errorcode 1
  end if
end function

-- Write a byte to the 1-Wire bus
procedure _1w_writebyte(byte in ib) is
  var byte temp
  temp = ib
  for 8 loop
    asm rrf temp, f
    if (status_c) then
      -- Output a "1"
      _1w_dq_dir = output               -- Momentary low
      _1w_dq_dir = input
      delay_20uS(3)                     -- 60uS delay
    else
      -- Output a "0"
      _1w_dq_dir = output               -- 60uS low
      delay_20uS(3)
      _1w_dq_dir = input
    end if
  end loop
end procedure

-- Read a byte from the 1Wire bus
function _1w_readbyte return byte is
  var byte temp
  temp = 0
  for 8 loop
    _1w_dq_dir = output                 -- momentary low
    _1w_dq_dir = input
    if (! _1w_dq) then                  -- sample data bit
      status_c = low                    -- it's low.
      asm rrf temp, f
    else
      status_c = high                   -- it's high.
      asm rrf temp, f
    end if
    delay_20uS(3)                       -- timeslot delay
  end loop
  return temp
end function

-- Wait for a temperature conversion to complete
procedure _1w_waitconv is
  var byte temp
  temp = 0
  -- DS182x sensors return 0x00 if conversion is in progress
  while (temp != 0xFF) loop
    temp = _1w_readbyte
  end loop
end procedure

_1w_dq_dir = input
_1w_dq = low

